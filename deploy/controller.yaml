---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: xevo-csi-controller
  namespace: qsan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: xevo-csi-controller
  template:
    metadata:
      labels:
        app: xevo-csi-controller
    spec:
      hostNetwork: true  # controller also needs to mount nfs to create dir
      dnsPolicy: Default  # available values: Default, ClusterFirstWithHostNet, ClusterFirst
      serviceAccountName: xevo-csi-controller-sa
      nodeSelector:
        kubernetes.io/os: linux  # add "kubernetes.io/role: master" to run controller on master node
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
      containers:
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.3.0
          args:
            - "-v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--leader-election-namespace=qsan"
            - "--feature-gates=Topology=true"
            - "--strict-topology=true"
            - "--timeout=60s"
          securityContext:
            privileged: true
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: liveness-probe
          image: registry.k8s.io/sig-storage/livenessprobe:v2.8.0
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29652
            - --v=2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v4.0.0
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - "--leader-election"
            - "--leader-election-namespace=qsan"
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
          args:
            - -v=5
            - -csi-address=/csi/csi.sock
            - "--leader-election"
            - "--leader-election-namespace=qsan"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        # - name: csi-snapshotter
        #   image: k8s.gcr.io/sig-storage/csi-snapshotter:v5.0.1
        #   args:
        #     - -v=5
        #     - --csi-address=/csi/csi.sock
        #   securityContext:
        #     privileged: true
        #   volumeMounts:
        #     - mountPath: /csi
        #       name: socket-dir
        - name: csi-external-health-monitor-controller
          image: k8s.gcr.io/sig-storage/csi-external-health-monitor-controller:v0.7.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--http-endpoint=:8080"
            - "--enable-node-watcher=true"
            - "--timeout=60s"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: driver
          image: qsandocker/qsan-xevo-csi:v1.0.0-b2
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          args:
            - "-v=4"
            - "--nodeid=$(NODE_ID)"
            - "--nodeip=$(NODE_IP)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--secret-file=/etc/qsan/qsan-auth.yaml"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - containerPort: 29652
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          volumeMounts:
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /csi
              name: socket-dir
            - name: qsan-auth
              mountPath: /etc/qsan
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 20Mi
      volumes:
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: socket-dir
          emptyDir: {}
        - name: qsan-auth
          secret:
            secretName: qsan-auth-secret
